services:

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - pi_network
  
  data_collector:
    build:
      context: ./data_collector
      dockerfile: Dockerfile
    container_name: data_collector
    volumes:
      - ./data_collector/prometheus_data:/app/prometheus_data
    ports:
      - "8001:8001" 
    networks:
      - pi_network
    environment:
      - PROMETHEUS_URL=http://prometheus:9090  # Variável de ambiente para o endereço do Prometheus

  node1:
    build:
      context: ./NODE
      dockerfile: Dockerfile
    container_name: node1-container
    environment:
      - NODE_ID=node1
      - NODE_PORT=8082
      - DATA_COLLECTOR_URL=http://data_collector:8001/receive_metrics
      - PROMETHEUS_URL=http://prometheus:9090
      - INSTANCE_LABEL=node-exporter1:9100
    ports:
      - "8082:8082"
    networks:
      - pi_network  # Conectado à mesma rede que a API para comunicação
  
  node-exporter1:
    image: prom/node-exporter
    container_name: node-exporter1
    ports:
      - "9101:9100"
    networks:
      - pi_network

  node2:
    build:
      context: ./NODE
      dockerfile: Dockerfile
    container_name: node2-container
    environment:
      - NODE_ID=node2
      - NODE_PORT=8082
      - DATA_COLLECTOR_URL=http://data_collector:8001/receive_metrics
      - PROMETHEUS_URL=http://prometheus:9090
      - INSTANCE_LABEL=node-exporter2:9100
    ports:
      - "8083:8082"
    networks:
      - pi_network
    depends_on:
      - node1
  node-exporter2:
    image: prom/node-exporter
    container_name: node-exporter2
    ports:
      - "9100"
    networks:
      - pi_network

  node3:
    build:
      context: ./NODE
      dockerfile: Dockerfile
    container_name: node3-container
    environment:
      - NODE_ID=node3
      - NODE_PORT=8082
      - DATA_COLLECTOR_URL=http://data_collector:8001/receive_metrics
      - PROMETHEUS_URL=http://prometheus:9090
      - INSTANCE_LABEL=node-exporter3:9100
    ports:
      - "8084:8082"
    networks:
      - pi_network
    depends_on:
      - node2
  node-exporter3:
    image: prom/node-exporter
    container_name: node-exporter3
    ports:
      - "9100"
    networks:
      - pi_network

  node4:
    build:
      context: ./NODE
      dockerfile: Dockerfile
    container_name: node4-container
    environment:
      - NODE_ID=node4
      - NODE_PORT=8082
      - DATA_COLLECTOR_URL=http://data_collector:8001/receive_metrics
      - PROMETHEUS_URL=http://prometheus:9090
      - INSTANCE_LABEL=node-exporter4:9100
    ports:
      - "8085:8082"
    networks:
      - pi_network
    depends_on:
      - node3
  node-exporter4:
    image: prom/node-exporter
    container_name: node-exporter4
    ports:
      - "9100"
    networks:
      - pi_network
  
  node5:
    build:
      context: ./NODE
      dockerfile: Dockerfile
    container_name: node5-container
    environment:
      - NODE_ID=node5
      - NODE_PORT=8082
      - DATA_COLLECTOR_URL=http://data_collector:8001/receive_metrics
      - PROMETHEUS_URL=http://prometheus:9090
      - INSTANCE_LABEL=node-exporter5:9100
    ports:
      - "8086:8082"
    networks:
      - pi_network
    depends_on:
      - node4
  node-exporter5:
    image: prom/node-exporter
    container_name: node-exporter5
    ports:
      - "9100"
    networks:
      - pi_network

networks:
  pi_network:
    driver: bridge